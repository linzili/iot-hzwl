stages:
  - build
  - buildImage
  - deployImage

variables:
  BUILD_SHELL: 'gradle :iot-server:build'
  IMAGE_NAME: "$CI_REGISTRY/$CI_PROJECT_PATH:$CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA-$CI_PIPELINE_ID"
  DOCKER_FILE_PATH: "./Dockerfile"
  DELETE_CONTAINER: "true"
  DEPLOY_SHELL: ssh $SERVE_ADDRESS docker run -d --network host --name $CI_PROJECT_NAME $IMAGE_NAME

build:
  image: gradle:8.5.0-jdk21
  stage: build
  tags:
    - build
  script:
    - $BUILD_SHELL
    - ls
  artifacts:
    paths:
      - iot-server/build/libs/iot-server.jar


build-docker:
  image: docker:20.10
  stage: buildImage
  tags:
    - build
  script:
    - docker login  $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWD
    - docker build -t ${IMAGE_NAME} -f ${DOCKER_FILE_PATH} .
    - docker push ${IMAGE_NAME}
    - docker rmi ${IMAGE_NAME}


deploy-image:
  stage: deployImage
  image: docker:20.10
  tags:
    - deploy
  before_script:
    - ssh $SERVE_ADDRESS docker login  $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWD
    - ssh $SERVE_ADDRESS docker pull $IMAGE_NAME
    - if [ "$DELETE_CONTAINER" == "true" ]; then ssh $SERVE_ADDRESS docker rm -f $CI_PROJECT_NAME; fi
  script:
    - $DEPLOY_SHELL


